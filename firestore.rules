rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return isSignedIn() && request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && exists(resource.path);
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    match /users/{userId}/cart/{productId} {
       function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return isSignedIn() && request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && exists(resource.path);
      }
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    match /products/{productId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && request.resource.data.farmer_id == resource.data.farmer_id;
      allow delete: if isSignedIn() && request.resource.data.farmer_id == resource.data.farmer_id;
    }

    match /orders/{orderId} {
      allow read: if false;
      allow write: if false;
    }

    match /shipments/{shipmentId} {
      allow read: if false;
      allow write: if false;
    }

    match /rewards/{rewardId} {
      allow read: if false;
      allow write: if false;
    }

    match /fraud_alerts/{alertId} {
      allow read: if false;
      allow write: if false;
    }
  }
}